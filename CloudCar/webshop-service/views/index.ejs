<!DOCTYPE html>
<html lang="de">
    <head>
        <meta charset="UTF-8" />
        <title>Elegance Merchandise Shop</title>
        <link
            href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
            rel="stylesheet" />
        <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: #f8fafc;
            color: #1e293b;
            line-height: 1.6;
        }

        /* Header Styles */
        .header {
            background: white;
            border-bottom: 1px solid #e2e8f0;
            padding: 1rem 2rem;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
        }

        .header-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1600px;
            margin: 0 auto;
        }

        .logo-section {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .logo {
            width: 32px;
            height: 32px;
            background: #6366f1;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .logo::after {
            content: '';
            width: 16px;
            height: 16px;
            background: white;
            border-radius: 2px;
        }

        .logo-text {
            font-size: 1.25rem;
            font-weight: 600;
            color: #6366f1;
        }

        .search-container {
            flex: 1;
            max-width: 500px;
            margin: 0 2rem;
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 0.75rem 1rem 0.75rem 2.5rem;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            background: #f9fafb;
            font-size: 0.875rem;
            transition: all 0.2s;
        }

        .search-input:focus {
            outline: none;
            border-color: #3b82f6;
            background: white;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .search-icon {
            position: absolute;
            left: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            width: 16px;
            height: 16px;
            color: #6b7280;
        }

        .header-actions {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .view-toggle {
            display: flex;
            background: #f1f5f9;
            border-radius: 8px;
            padding: 4px;
            gap: 4px;
        }

        .view-btn {
            padding: 0.5rem;
            border: none;
            background: transparent;
            cursor: pointer;
            border-radius: 6px;
            transition: all 0.2s;
            color: #6b7280;
        }

        .view-btn.active {
            background: white;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            color: #374151;
        }

        .cart-link,
        .header-icon-btn {
            position: relative;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.5rem;
            border: none;
            background: transparent;
            cursor: pointer;
            color: #6b7280;
            text-decoration: none;
            transition: color 0.2s;
            border-radius: 6px;
            height: 40px;
            width: 40px;
        }

        .cart-link:hover,
        .header-icon-btn:hover {
            color: #6366f1;
            background: #f1f5f9;
        }

        .cart-link svg,
        .header-icon-btn svg {
            display: block;
            margin: 0;
            flex-shrink: 0;
        }

        .cart-quantity-badge {
            position: absolute;
            top: -4px;
            right: -4px;
            background: #ef4444;
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            font-size: 0.75rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            display: none;
        }

        /* Main Layout */
        .main-container {
            display: flex;
            max-width: 1600px;
            margin: 0 auto;
            gap: 2rem;
            padding: 2rem;
            align-items: start;
        }

        /* Content Wrapper - holds products and currency widget */
        .content-wrapper {
            display: flex;
            gap: 2rem;
            flex: 1;
            align-items: start;
        }

        /* Sidebar Styles */
        .sidebar {
            width: 280px;
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            height: fit-content;
            position: sticky;
            top: 100px;
            max-height: calc(100vh - 120px);
            overflow-y: auto;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .sidebar-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 1.5rem;
        }

        .sidebar-title {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
            color: #1e293b;
        }

        .products-count {
            font-size: 0.875rem;
            color: #6b7280;
        }

        .filter-section {
            margin-bottom: 2rem;
        }

        .filter-title {
            font-weight: 500;
            color: #1e293b;
            margin-bottom: 1rem;
        }

        .checkbox-group {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .checkbox-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .checkbox-item input[type="checkbox"] {
            width: 16px;
            height: 16px;
            accent-color: #3b82f6;
        }

        .checkbox-item label {
            font-size: 0.875rem;
            color: #374151;
            cursor: pointer;
        }

        .price-range {
            margin-bottom: 1rem;
        }

        .price-slider {
            width: 100%;
            margin: 1rem 0;
        }

        .price-values {
            display: flex;
            justify-content: space-between;
            font-size: 0.875rem;
            color: #6b7280;
        }

        .clear-filters-btn {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #d1d5db;
            background: white;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.2s;
        }

        .clear-filters-btn:hover {
            background: #f9fafb;
            border-color: #9ca3af;
        }

        /* Product Grid */
        .products-container {
            flex: 1;
            min-width: 0; /* Allows flex shrinking */
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* Minimum 3 columns side by side */
            gap: 1.5rem;
            align-items: start;
            width: 100%;
        }

        .products-grid.list-view {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .products-grid.list-view .product-card {
            display: flex !important;
            flex-direction: row;
            align-items: stretch;
            height: 170px;
            min-height: 170px;
            max-height: 170px;
        }

        .products-grid.list-view .product-card.hidden {
            display: none !important;
        }

        .products-grid.list-view .product-image {
            width: 150px;
            height: 120px;
            flex-shrink: 0;
            margin: 15px;
            object-fit: contain;
        }

        .products-grid.list-view .product-info {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            height: 100%;
            padding: 1rem;
            min-height: auto;
        }

        .products-grid.list-view .product-footer {
            margin-top: 0;
            padding: 0.5rem 0 0 0;
            min-height: auto;
            background: transparent;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 1rem;
        }

        .products-grid.list-view .product-name {
            height: auto;
            margin-bottom: 0.5rem;
        }

        .products-grid.list-view .product-description {
            height: auto;
            margin-bottom: 0.5rem;
            -webkit-line-clamp: 2;
            line-clamp: 2;
            overflow-y: auto;
            scrollbar-width: thin;
            scrollbar-color: #cbd5e1 #f1f5f9;
            padding-right: 8px;
            margin-right: -8px;
        }

        .products-grid.list-view .product-description::-webkit-scrollbar {
            width: 8px;
            background: transparent;
        }

        .products-grid.list-view .product-description::-webkit-scrollbar-track {
            background: #f8fafc;
            border-radius: 4px;
            border: 1px solid #e2e8f0;
        }

        .products-grid.list-view .product-description::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 4px;
            border: 1px solid #94a3b8;
        }

        .products-grid.list-view .product-description::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }

        .product-card {
            background: white;
            border-radius: 16px;
            overflow: hidden;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            border: 1px solid #f1f5f9;
            display: flex;
            flex-direction: column;
            height: 100%;
            min-height: 520px;
            position: relative;
            width: 100%;
        }

        .product-card.hidden {
            display: none !important;
        }

        .product-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .product-card:hover .product-image {
            transform: scale(1.05);
        }

        .product-image {
            width: 100%;
            height: 240px;
            object-fit: contain;
            background: white;
            padding: 0.75rem;
            transition: transform 0.3s ease;
        }

        .product-info {
            padding: 1.5rem;
            display: flex;
            flex-direction: column;
            flex-grow: 1;
            min-height: 240px;
        }

        .product-name {
            font-weight: 600;
            color: #1e293b;
            font-size: 1.1rem;
            line-height: 1.4;
            margin-bottom: 0.5rem;
        }

        .product-description {
            color: #64748b;
            font-size: 0.875rem;
            margin-bottom: 1rem;
            line-height: 1.5;
            flex-grow: 1;
            height: 4rem;
            overflow-y: scroll;
            padding-right: 0.5rem;
            scrollbar-width: thin;
            scrollbar-color: #cbd5e1 #f1f5f9;
        }

        .product-description::-webkit-scrollbar {
            width: 6px;
            height: 6px;
        }

        .product-description::-webkit-scrollbar-track {
            background: #f1f5f9;
            border-radius: 3px;
            -webkit-box-shadow: inset 0 0 3px rgba(0,0,0,0.1);
        }

        .product-description::-webkit-scrollbar-thumb {
            background: #cbd5e1;
            border-radius: 3px;
            -webkit-box-shadow: inset 0 0 3px rgba(0,0,0,0.3);
        }

        .product-description::-webkit-scrollbar-thumb:hover {
            background: #94a3b8;
        }

        .product-description::-webkit-scrollbar-corner {
            background: #f1f5f9;
        }

        .product-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-top: 1px solid #f1f5f9;
            background: white;
            gap: 1rem;
            padding-top: 1.5rem;
        }

        .product-price {
            font-weight: 700;
            color: #1e293b;
            font-size: 1.25rem;
            flex-shrink: 0;
            margin-left: 0;
        }

        .cart-form {
            flex-shrink: 0;
        }

        .add-to-cart-btn {
            background: #6366f1;
            color: white;
            border: none;
            padding: 0.75rem 1.25rem;
            border-radius: 12px;
            cursor: pointer;
            font-weight: 600;
            font-size: 0.875rem;
            transition: all 0.2s;
            display: flex;
            align-items: center;
            gap: 0.5rem;
            white-space: nowrap;
            min-width: fit-content;
        }

        .add-to-cart-btn:hover {
            background: #4f46e5;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.4);
        }

        /* Wishlist heart icon */
        .wishlist-btn {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: transparent;
            border: none;
            cursor: pointer;
            transition: all 0.2s;
            z-index: 10;
            color: #9ca3af;
            padding: 0.25rem;
        }

        .wishlist-btn:hover {
            color: #dc2626;
            transform: scale(1.1);
        }

        .wishlist-btn.active {
            color: #dc2626;
        }

        /* Video play button */
        .video-btn {
            position: absolute;
            top: 0.75rem;
            left: 0.75rem;
            background: rgba(0, 0, 0, 0.7);
            border: none;
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s;
            backdrop-filter: blur(4px);
            z-index: 10;
        }

        .video-btn:hover {
            background: rgba(0, 0, 0, 0.9);
            transform: scale(1.1);
        }

        /* Video Modal */
        .video-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .video-modal.show {
            display: flex;
        }

        .video-modal-content {
            position: relative;
            background: white;
            border-radius: 12px;
            padding: 0.25rem;
            max-width: 90vw;
            max-height: 90vh;
            overflow: hidden;
        }

        .video-container {
            position: relative;
            width: 720px;
            height: 405px;
            max-width: 100%;
            max-height: 70vh;
        }

        .video-close-btn {
            position: absolute;
            top: 0.25rem;
            right: 0.25rem;
            background: #ef4444;
            border: none;
            color: white;
            width: 32px;
            height: 32px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            z-index: 1001;
        }

        .video-close-btn:hover {
            background: #dc2626;
        }

        .video-iframe {
            width: 100%;
            height: 100%;
            border: none;
            border-radius: 8px;
            transition: opacity 0.3s ease;
        }

        /* Currency Exchange Widget */
        .currency-widget {
            background: white;
            border-radius: 12px;
            padding: 1.25rem;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            border: 1px solid #e2e8f0;
            width: 220px; /* Reduced from 280px */
            height: fit-content;
            position: sticky;
            top: 100px;
            flex-shrink: 0;
            transition: all 0.3s ease;
        }

        .currency-widget.collapsed {
            height: 50px; /* Reduced from 60px */
            overflow: hidden;
        }

        .currency-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 0.75rem;
            cursor: pointer;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #f1f5f9;
        }

        .currency-title {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 600;
            color: #1e293b;
            font-size: 0.8rem; /* Slightly smaller font */
        }

        .currency-toggle {
            background: none;
            border: none;
            color: #6b7280;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .currency-widget.collapsed .currency-toggle {
            transform: rotate(180deg);
        }

        .currency-content {
            transition: all 0.3s ease;
        }

        .currency-widget.collapsed .currency-content {
            opacity: 0;
            height: 0;
            overflow: hidden;
        }

        .currency-rates {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .currency-rate {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.2rem 0; /* Reduced padding */
            font-size: 0.8rem; /* Smaller font */
        }

        .currency-code {
            font-weight: 500;
            color: #374151;
        }

        .currency-value {
            color: #6b7280;
            font-family: 'Courier New', monospace;
            font-size: 0.75rem; /* Smaller monospace font */
        }

        .currency-update {
            text-align: center;
            font-size: 0.75rem;
            color: #9ca3af;
            margin-top: 0.5rem;
            padding-top: 0.5rem;
            border-top: 1px solid #f1f5f9;
        }

        .currency-loading {
            text-align: center;
            color: #6b7280;
            font-size: 0.875rem;
            padding: 1rem 0;
        }

        @media (max-width: 900px) {
            .video-iframe {
                width: 80vw;
                height: 45vw;
            }
            
            .main-container {
                flex-direction: column;
            }
            
            .content-wrapper {
                flex-direction: column;
            }
            
            .currency-widget {
                width: 100%;
                position: static;
            }
            
            .products-grid {
                grid-template-columns: repeat(3, 1fr); /* Force 3 columns on tablets */
            }
        }

        /* Toast Message */
        .cart-message {
            position: fixed;
            top: 100px;
            right: 2rem;
            background: #1e293b;
            color: white;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            font-size: 0.875rem;
            opacity: 0;
            transform: translateX(100%);
            transition: all 0.3s ease;
            z-index: 1000;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

        .cart-message.show {
            opacity: 1;
            transform: translateX(0);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .main-container {
                flex-direction: column;
                padding: 1rem;
            }

            .sidebar {
                width: 100%;
                position: static;
            }
            
            .content-wrapper {
                flex-direction: column;
            }
            
            .currency-widget {
                width: 100%;
                position: static;
            }

            .search-container {
                margin: 0 1rem;
            }

            .products-grid {
                grid-template-columns: repeat(2, 1fr); /* 2 columns for mobile */
            }
        }

        @media (max-width: 480px) {
            .products-grid {
                grid-template-columns: 1fr; /* Single column only for very small screens */
            }
        }
    </style>
    </head>
    <body>
        <!-- Header -->
        <header class="header">
            <div class="header-container">
                <div class="logo-section">
                    <div class="logo"></div>
                    <h1 class="logo-text">Elegance Merchandise Shop</h1>
                </div>

                <div class="search-container">
                    <svg class="search-icon" fill="none" stroke="currentColor"
                        viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round"
                            stroke-width="2"
                            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
                    </svg>
                    <input type="text" class="search-input"
                        placeholder="Search products..." id="search-input">
                </div>

                <div class="header-actions">
                    <div class="view-toggle">
                        <button class="view-btn active" id="grid-view">
                            <svg width="16" height="16" fill="currentColor"
                                viewBox="0 0 24 24">
                                <path
                                    d="M3 3h7v7H3V3zm11 0h7v7h-7V3zM3 14h7v7H3v-7zm11 0h7v7h-7v-7z" />
                            </svg>
                        </button>
                        <button class="view-btn" id="list-view">
                            <svg width="16" height="16" fill="currentColor"
                                viewBox="0 0 24 24">
                                <path
                                    d="M3 6h18v2H3V6zm0 5h18v2H3v-2zm0 5h18v2H3v-2z" />
                            </svg>
                        </button>
                    </div>

                    <!-- Wishlist Icon -->
                    <button class="header-icon-btn">
                        <svg width="20" height="20" fill="none"
                            stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                stroke-width="2"
                                d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                        </svg>
                    </button>

                    <!-- User Icon -->
                    <button class="header-icon-btn">
                        <svg width="20" height="20" fill="none"
                            stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                stroke-width="2"
                                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                    </button>

                    <a href="/cart" class="cart-link">
                        <svg width="20" height="20" fill="none"
                            stroke="currentColor" viewBox="0 0 24 24"
                            stroke-width="2" stroke-linecap="round"
                            stroke-linejoin="round">
                            <circle cx="9" cy="21" r="1" />
                            <circle cx="20" cy="21" r="1" />
                            <path
                                d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6" />
                        </svg>
                        <span id="cart-quantity-badge"
                            class="cart-quantity-badge"><%= totalCartQuantity
                            %></span>
                    </a>
                </div>
            </div>
        </header>

        <!-- Toast Message -->
        <div id="cart-message" class="cart-message"></div>

        <!-- Video Modal -->
        <div id="video-modal" class="video-modal">
            <div class="video-modal-content">
                <button class="video-close-btn"
                    onclick="closeVideoModal()">&times;</button>
                <div id="video-container" class="video-container">
                    <iframe id="video-iframe"
                        class="video-iframe"
                        src
                        allowfullscreen
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                        sandbox="allow-scripts allow-same-origin allow-presentation"></iframe>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-container">
            <!-- Sidebar -->
            <aside class="sidebar">
                <div class="sidebar-header">
                    <div class="sidebar-title">
                        <svg width="20" height="20" fill="none"
                            stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                stroke-width="2"
                                d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z" />
                        </svg>
                        Filters
                    </div>
                    <span class="products-count" id="products-count"><%=
                        products.length %> products found</span>
                </div>

                <!-- Categories Filter -->
                <div class="filter-section">
                    <h3 class="filter-title">Categories</h3>
                    <div class="checkbox-group" id="category-filters">
                        <div class="checkbox-item">
                            <input type="checkbox" id="electronics"
                                value="Electronics">
                            <label for="electronics">Electronics</label>
                        </div>
                        <div class="checkbox-item">
                            <input type="checkbox" id="accessories"
                                value="Accessories">
                            <label for="accessories">Accessories</label>
                        </div>
                        <div class="checkbox-item">
                            <input type="checkbox" id="automotive"
                                value="Automotive">
                            <label for="automotive">Automotive</label>
                        </div>
                        <div class="checkbox-item">
                            <input type="checkbox" id="home"
                                value="Home & Living">
                            <label for="home">Home & Living</label>
                        </div>
                        <div class="checkbox-item">
                            <input type="checkbox" id="books"
                                value="Books & Media">
                            <label for="books">Books & Media</label>
                        </div>
                    </div>
                </div>

                <!-- Price Range Filter -->
                <div class="filter-section">
                    <h3 class="filter-title">Price Range</h3>
                    <div class="price-range">
                        <input type="range" class="price-slider"
                            id="price-range" min="0" max="2000" value="2000">
                        <div class="price-values">
                            <span>0 €</span>
                            <span id="max-price">2000 €</span>
                        </div>
                    </div>
                </div>

                <!-- Clear Filters Button -->
                <button class="clear-filters-btn"
                    onclick="clearAllFilters()">Clear All Filters</button>
            </aside>

            <!-- Content Wrapper - contains products and currency widget -->
            <div class="content-wrapper">
                <!-- Products Container -->
                <main class="products-container">
                    <div class="products-grid" id="products-grid">
                        <% products.forEach(product => { %>
                        <div class="product-card"
                            data-category="<%= product.category || 'Automotive' %>"
                            data-price="<%= product.price %>">

                            <!-- Wishlist Button -->
                            <button class="wishlist-btn"
                                onclick="toggleWishlist(this)">
                                <svg width="20" height="20" fill="currentColor"
                                    stroke="none" viewBox="0 0 24 24">
                                    <path
                                        d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                                </svg>
                            </button>

                            <!-- Video Button -->
                            <% if (product.youtube_url) { %>
                            <button class="video-btn"
                                onclick="openVideoModal('<%= product.youtube_url %>')"
                                title="Video abspielen">
                                <svg width="16" height="16" fill="currentColor"
                                    viewBox="0 0 24 24">
                                    <path d="M8 5v14l11-7z" />
                                </svg>
                            </button>
                            <% } %>

                            <img src="<%= product.image_url %>"
                                alt="<%= product.name %>"
                                class="product-image" />
                            <div class="product-info">
                                <h3 class="product-name"><%= product.name
                                    %></h3>
                                <p class="product-description"><%=
                                    product.description %></p>
                                <div class="product-footer">
                                    <span class="product-price">
                                        <%= product.price ?
                                        parseFloat(product.price).toFixed(2) +
                                        ' €'
                                        : 'Preis nicht verfügbar' %>
                                    </span>
                                    <form class="cart-form">
                                        <input type="hidden" name="product_id"
                                            value="<%= product.id %>">
                                        <button type="submit"
                                            class="add-to-cart-btn">
                                            <svg width="16" height="16"
                                                fill="none"
                                                stroke="currentColor"
                                                viewBox="0 0 24 24"
                                                stroke-width="2"
                                                stroke-linecap="round"
                                                stroke-linejoin="round">
                                                <circle cx="9" cy="21" r="1" />
                                                <circle cx="20" cy="21" r="1" />
                                                <path
                                                    d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6" />
                                            </svg>
                                            Add to Cart
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <% }) %>
                    </div>
                </main>

                <!-- Currency Exchange Widget -->
                <div id="currency-widget" class="currency-widget collapsed">
                    <div class="currency-header"
                        onclick="toggleCurrencyWidget()">
                        <div class="currency-title">
                            <svg width="16" height="16" fill="currentColor"
                                viewBox="0 0 24 24">
                                <path
                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM9.5 8c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5S9.5 8.83 9.5 8zM12 18c-2.28 0-4.22-1.66-5-4h2c.78 1.33 2.22 2 3.5 2s2.72-.67 3.5-2h2c-.78 2.34-2.72 4-5 4zm0-6c-.83 0-1.5-.67-1.5-1.5S11.17 10 12 10s1.5.67 1.5 1.5S12.83 12 12 12zm2.5-4c-.83 0-1.5-.67-1.5-1.5S13.67 6.5 14.5 6.5 16 7.17 16 8s-.67 1.5-1.5 1.5z" />
                            </svg>
                            Exchange Rates
                        </div>
                        <button class="currency-toggle">
                            <svg width="16" height="16" fill="currentColor"
                                viewBox="0 0 24 24">
                                <path d="M7 14l5-5 5 5z" />
                            </svg>
                        </button>
                    </div>
                    <div class="currency-content">
                        <div id="currency-rates" class="currency-rates">
                            <div class="currency-loading">Loading exchange
                                rates...</div>
                        </div>
                        <div id="currency-update" class="currency-update"></div>
                    </div>
                </div>
            </div>
        </div>

        <script>
        // Keep all your existing JavaScript functionality
        document.addEventListener('DOMContentLoaded', () => {
            const cartForms = document.querySelectorAll('.cart-form');
            const cartQuantityBadge = document.getElementById('cart-quantity-badge');
            const cartMessage = document.getElementById('cart-message');
            const searchInput = document.getElementById('search-input');
            const priceRange = document.getElementById('price-range');
            const maxPriceDisplay = document.getElementById('max-price');
            const productsCount = document.getElementById('products-count');

            // Show cart badge if there are items
            const initialQuantity = parseInt(cartQuantityBadge.textContent.trim());
            if (initialQuantity > 0) {
                cartQuantityBadge.style.display = 'flex';
            }

            // Toast message function
            const showCartMessage = (message) => {
                cartMessage.textContent = message;
                cartMessage.classList.add('show');
                setTimeout(() => {
                    cartMessage.classList.remove('show');
                }, 5000);
            };

            // Add to cart functionality (keep your existing code)
            cartForms.forEach(form => {
                form.addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const productId = form.querySelector('input[name="product_id"]').value;

                    try {
                        const response = await fetch('/cart/add', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ productId: parseInt(productId) })
                        });

                        if (!response.ok) {
                            const errorData = await response.json();
                            throw new Error(errorData.message || 'Error adding to cart');
                        }

                        const data = await response.json();

                        if (cartQuantityBadge) {
                            cartQuantityBadge.textContent = data.totalCartQuantity;
                            cartQuantityBadge.style.display = data.totalCartQuantity > 0 ? 'flex' : 'none';
                        }

                        showCartMessage(`✔️ Product "${data.productName}" added to cart`);
                    } catch (error) {
                        console.error('Error adding to cart:', error);
                        showCartMessage(`❌ Error: ${error.message}`);
                    }
                });
            });

            // Initialize price slider to maximum value
            priceRange.value = 2000;
            maxPriceDisplay.textContent = '2000 €';
            
            // Filter functionality
            const filterProducts = () => {
                const searchTerm = searchInput.value.toLowerCase();
                const maxPrice = parseInt(priceRange.value);
                const selectedCategories = Array.from(document.querySelectorAll('#category-filters input:checked')).map(cb => cb.value);
                
                const productCards = document.querySelectorAll('.product-card');
                let visibleCount = 0;

                productCards.forEach(card => {
                    const productName = card.querySelector('.product-name').textContent.toLowerCase();
                    const productPrice = parseFloat(card.dataset.price);
                    const productCategory = card.dataset.category;

                    const matchesSearch = productName.includes(searchTerm);
                    const matchesPrice = productPrice <= maxPrice;
                    // If no categories are selected, show all products
                    // Otherwise show only selected categories
                    const matchesCategory = selectedCategories.length === 0 || selectedCategories.includes(productCategory);

                    if (matchesSearch && matchesPrice && matchesCategory) {
                        card.classList.remove('hidden');
                        visibleCount++;
                    } else {
                        card.classList.add('hidden');
                    }
                });

                productsCount.textContent = `${visibleCount} products found`;
            };

            // Event listeners for filters
            searchInput.addEventListener('input', filterProducts);
            priceRange.addEventListener('input', (e) => {
                maxPriceDisplay.textContent = e.target.value + ' €';
                filterProducts();
            });

            document.querySelectorAll('#category-filters input').forEach(checkbox => {
                checkbox.addEventListener('change', filterProducts);
            });

            // Clear filters function
            window.clearAllFilters = () => {
                searchInput.value = '';
                priceRange.value = 2000;
                maxPriceDisplay.textContent = '2000 €';
                document.querySelectorAll('#category-filters input').forEach(cb => cb.checked = false);
                filterProducts();
            };

            // View toggle functionality
            const gridViewBtn = document.getElementById('grid-view');
            const listViewBtn = document.getElementById('list-view');
            const productsGrid = document.getElementById('products-grid');

            gridViewBtn.addEventListener('click', () => {
                gridViewBtn.classList.add('active');
                listViewBtn.classList.remove('active');
                productsGrid.classList.remove('list-view');
            });

            listViewBtn.addEventListener('click', () => {
                listViewBtn.classList.add('active');
                gridViewBtn.classList.remove('active');
                productsGrid.classList.add('list-view');
            });

            // Wishlist functionality
            window.toggleWishlist = (button) => {
                const isActive = button.classList.contains('active');
                if (isActive) {
                    button.classList.remove('active');
                } else {
                    button.classList.add('active');
                }
            };

            // Video modal functionality
            window.openVideoModal = (videoUrl) => {
                const videoModal = document.getElementById('video-modal');
                const videoIframe = document.getElementById('video-iframe');
                
                console.log('Opening video with URL:', videoUrl);
                
                // Clear any previous src first
                videoIframe.src = '';
                
                // Show modal first
                videoModal.classList.add('show');
                
                // Add loading state
                videoIframe.style.opacity = '0.5';
                
                // Use a slight delay to ensure modal is visible, then load video
                setTimeout(() => {
                    try {
                        // Load the YouTube URL
                        videoIframe.src = videoUrl;
                        
                        // Reset opacity after loading
                        setTimeout(() => {
                            videoIframe.style.opacity = '1';
                        }, 500);
                        
                    } catch (error) {
                        console.error('Error loading video:', error);
                        videoIframe.style.opacity = '1';
                    }
                }, 100);
                
                // Prevent background scrolling
                document.body.style.overflow = 'hidden';
            };

            window.closeVideoModal = () => {
                const videoModal = document.getElementById('video-modal');
                const videoIframe = document.getElementById('video-iframe');
                
                videoModal.classList.remove('show');
                
                // Clear src with a delay to avoid stopping mid-transition
                setTimeout(() => {
                    videoIframe.src = '';
                    videoIframe.style.opacity = '1';
                }, 300);
                
                // Allow scrolling again
                document.body.style.overflow = 'auto';
            };

            // Modal schließen beim Klick außerhalb des Inhalts
            document.getElementById('video-modal').addEventListener('click', (e) => {
                if (e.target.id === 'video-modal') {
                    closeVideoModal();
                }
            });

            // Modal schließen mit Escape-Taste
            document.addEventListener('keydown', (e) => {
                if (e.key === 'Escape') {
                    closeVideoModal();
                }
            });

            // Currency Widget Functionality
            window.toggleCurrencyWidget = () => {
                const widget = document.getElementById('currency-widget');
                widget.classList.toggle('collapsed');
            };

            // Load exchange rates
            const loadExchangeRates = async () => {
                try {
                    const response = await fetch('/api/exchange-rates');
                    const data = await response.json();
                    
                    const ratesContainer = document.getElementById('currency-rates');
                    const updateContainer = document.getElementById('currency-update');
                    
                    ratesContainer.innerHTML = '';
                    
                    // Currency names for better display
                    const currencyNames = {
                        EUR: 'Euro (1€ = 1€)',
                        USD: 'US Dollar',
                        GBP: 'British Pound',
                        CHF: 'Swiss Franc',
                        JPY: 'Japanese Yen',
                        CAD: 'Canadian Dollar'
                    };
                    
                    Object.entries(data.rates).forEach(([currency, rate]) => {
                        const rateElement = document.createElement('div');
                        rateElement.className = 'currency-rate';
                        
                        // Special formatting for EUR to make it clear it's the base
                        const displayValue = currency === 'EUR' ? 
                            '1.0000' : 
                            rate.toFixed(4);
                            
                        rateElement.innerHTML = `
                            <span class="currency-code">${currency}</span>
                            <span class="currency-value">${displayValue}</span>
                        `;
                        ratesContainer.appendChild(rateElement);
                    });
                    
                    updateContainer.textContent = `Updated: ${data.lastUpdate}`;
                    
                } catch (error) {
                    console.error('Error loading exchange rates:', error);
                    document.getElementById('currency-rates').innerHTML = 
                        '<div class="currency-loading" style="color: #ef4444;">Failed to load rates</div>';
                }
            };

            // Load exchange rates on page load
            loadExchangeRates();
            
            // Update exchange rates every 5 minutes
            setInterval(loadExchangeRates, 5 * 60 * 1000);

            // Initial filter to show all products on page load
            filterProducts();
        });
    </script>
    </body>
</html>